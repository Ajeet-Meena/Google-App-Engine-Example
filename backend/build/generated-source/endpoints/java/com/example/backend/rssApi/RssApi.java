/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-10-17 16:43:55 UTC)
 * on 2016-12-11 at 04:51:19 UTC 
 * Modify at your own risk.
 */

package com.example.backend.rssApi;

/**
 * Service definition for RssApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RssApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class RssApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the rssApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "rssApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public RssApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  RssApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getSubscribedRssList".
   *
   * This request holds the parameters needed by the rssApi server.  After setting any optional
   * parameters, call the {@link GetSubscribedRssList#execute()} method to invoke the remote
   * operation.
   *
   * @param noOfItems
   * @param page
   * @return the request
   */
  public GetSubscribedRssList getSubscribedRssList(java.lang.Integer noOfItems, java.lang.Integer page) throws java.io.IOException {
    GetSubscribedRssList result = new GetSubscribedRssList(noOfItems, page);
    initialize(result);
    return result;
  }

  public class GetSubscribedRssList extends RssApiRequest<com.example.backend.rssApi.model.SubscriptionListResponse> {

    private static final String REST_PATH = "getSubscribedRssList";

    /**
     * Create a request for the method "getSubscribedRssList".
     *
     * This request holds the parameters needed by the the rssApi server.  After setting any optional
     * parameters, call the {@link GetSubscribedRssList#execute()} method to invoke the remote
     * operation. <p> {@link GetSubscribedRssList#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param noOfItems
     * @param page
     * @since 1.13
     */
    protected GetSubscribedRssList(java.lang.Integer noOfItems, java.lang.Integer page) {
      super(RssApi.this, "GET", REST_PATH, null, com.example.backend.rssApi.model.SubscriptionListResponse.class);
      this.noOfItems = com.google.api.client.util.Preconditions.checkNotNull(noOfItems, "Required parameter noOfItems must be specified.");
      this.page = com.google.api.client.util.Preconditions.checkNotNull(page, "Required parameter page must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSubscribedRssList setAlt(java.lang.String alt) {
      return (GetSubscribedRssList) super.setAlt(alt);
    }

    @Override
    public GetSubscribedRssList setFields(java.lang.String fields) {
      return (GetSubscribedRssList) super.setFields(fields);
    }

    @Override
    public GetSubscribedRssList setKey(java.lang.String key) {
      return (GetSubscribedRssList) super.setKey(key);
    }

    @Override
    public GetSubscribedRssList setOauthToken(java.lang.String oauthToken) {
      return (GetSubscribedRssList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSubscribedRssList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSubscribedRssList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSubscribedRssList setQuotaUser(java.lang.String quotaUser) {
      return (GetSubscribedRssList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSubscribedRssList setUserIp(java.lang.String userIp) {
      return (GetSubscribedRssList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer noOfItems;

    /**

     */
    public java.lang.Integer getNoOfItems() {
      return noOfItems;
    }

    public GetSubscribedRssList setNoOfItems(java.lang.Integer noOfItems) {
      this.noOfItems = noOfItems;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer page;

    /**

     */
    public java.lang.Integer getPage() {
      return page;
    }

    public GetSubscribedRssList setPage(java.lang.Integer page) {
      this.page = page;
      return this;
    }

    @Override
    public GetSubscribedRssList set(String parameterName, Object value) {
      return (GetSubscribedRssList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "retrieveRss".
   *
   * This request holds the parameters needed by the rssApi server.  After setting any optional
   * parameters, call the {@link RetrieveRss#execute()} method to invoke the remote operation.
   *
   * @param callbackUrl
   * @param count
   * @param topicUrl
   * @return the request
   */
  public RetrieveRss retrieveRss(java.lang.String callbackUrl, java.lang.Integer count, java.lang.String topicUrl) throws java.io.IOException {
    RetrieveRss result = new RetrieveRss(callbackUrl, count, topicUrl);
    initialize(result);
    return result;
  }

  public class RetrieveRss extends RssApiRequest<com.example.backend.rssApi.model.ApiResponse> {

    private static final String REST_PATH = "retrieveRss";

    /**
     * Create a request for the method "retrieveRss".
     *
     * This request holds the parameters needed by the the rssApi server.  After setting any optional
     * parameters, call the {@link RetrieveRss#execute()} method to invoke the remote operation. <p>
     * {@link
     * RetrieveRss#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param callbackUrl
     * @param count
     * @param topicUrl
     * @since 1.13
     */
    protected RetrieveRss(java.lang.String callbackUrl, java.lang.Integer count, java.lang.String topicUrl) {
      super(RssApi.this, "GET", REST_PATH, null, com.example.backend.rssApi.model.ApiResponse.class);
      this.callbackUrl = com.google.api.client.util.Preconditions.checkNotNull(callbackUrl, "Required parameter callbackUrl must be specified.");
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
      this.topicUrl = com.google.api.client.util.Preconditions.checkNotNull(topicUrl, "Required parameter topicUrl must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public RetrieveRss setAlt(java.lang.String alt) {
      return (RetrieveRss) super.setAlt(alt);
    }

    @Override
    public RetrieveRss setFields(java.lang.String fields) {
      return (RetrieveRss) super.setFields(fields);
    }

    @Override
    public RetrieveRss setKey(java.lang.String key) {
      return (RetrieveRss) super.setKey(key);
    }

    @Override
    public RetrieveRss setOauthToken(java.lang.String oauthToken) {
      return (RetrieveRss) super.setOauthToken(oauthToken);
    }

    @Override
    public RetrieveRss setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RetrieveRss) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RetrieveRss setQuotaUser(java.lang.String quotaUser) {
      return (RetrieveRss) super.setQuotaUser(quotaUser);
    }

    @Override
    public RetrieveRss setUserIp(java.lang.String userIp) {
      return (RetrieveRss) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String callbackUrl;

    /**

     */
    public java.lang.String getCallbackUrl() {
      return callbackUrl;
    }

    public RetrieveRss setCallbackUrl(java.lang.String callbackUrl) {
      this.callbackUrl = callbackUrl;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public RetrieveRss setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String topicUrl;

    /**

     */
    public java.lang.String getTopicUrl() {
      return topicUrl;
    }

    public RetrieveRss setTopicUrl(java.lang.String topicUrl) {
      this.topicUrl = topicUrl;
      return this;
    }

    @Override
    public RetrieveRss set(String parameterName, Object value) {
      return (RetrieveRss) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "subscribeTopic".
   *
   * This request holds the parameters needed by the rssApi server.  After setting any optional
   * parameters, call the {@link SubscribeTopic#execute()} method to invoke the remote operation.
   *
   * @param callbackUrl
   * @param topicUrl
   * @return the request
   */
  public SubscribeTopic subscribeTopic(java.lang.String callbackUrl, java.lang.String topicUrl) throws java.io.IOException {
    SubscribeTopic result = new SubscribeTopic(callbackUrl, topicUrl);
    initialize(result);
    return result;
  }

  public class SubscribeTopic extends RssApiRequest<com.example.backend.rssApi.model.ApiResponse> {

    private static final String REST_PATH = "subscribeTopic";

    /**
     * Create a request for the method "subscribeTopic".
     *
     * This request holds the parameters needed by the the rssApi server.  After setting any optional
     * parameters, call the {@link SubscribeTopic#execute()} method to invoke the remote operation.
     * <p> {@link SubscribeTopic#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param callbackUrl
     * @param topicUrl
     * @since 1.13
     */
    protected SubscribeTopic(java.lang.String callbackUrl, java.lang.String topicUrl) {
      super(RssApi.this, "GET", REST_PATH, null, com.example.backend.rssApi.model.ApiResponse.class);
      this.callbackUrl = com.google.api.client.util.Preconditions.checkNotNull(callbackUrl, "Required parameter callbackUrl must be specified.");
      this.topicUrl = com.google.api.client.util.Preconditions.checkNotNull(topicUrl, "Required parameter topicUrl must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public SubscribeTopic setAlt(java.lang.String alt) {
      return (SubscribeTopic) super.setAlt(alt);
    }

    @Override
    public SubscribeTopic setFields(java.lang.String fields) {
      return (SubscribeTopic) super.setFields(fields);
    }

    @Override
    public SubscribeTopic setKey(java.lang.String key) {
      return (SubscribeTopic) super.setKey(key);
    }

    @Override
    public SubscribeTopic setOauthToken(java.lang.String oauthToken) {
      return (SubscribeTopic) super.setOauthToken(oauthToken);
    }

    @Override
    public SubscribeTopic setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SubscribeTopic) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SubscribeTopic setQuotaUser(java.lang.String quotaUser) {
      return (SubscribeTopic) super.setQuotaUser(quotaUser);
    }

    @Override
    public SubscribeTopic setUserIp(java.lang.String userIp) {
      return (SubscribeTopic) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String callbackUrl;

    /**

     */
    public java.lang.String getCallbackUrl() {
      return callbackUrl;
    }

    public SubscribeTopic setCallbackUrl(java.lang.String callbackUrl) {
      this.callbackUrl = callbackUrl;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String topicUrl;

    /**

     */
    public java.lang.String getTopicUrl() {
      return topicUrl;
    }

    public SubscribeTopic setTopicUrl(java.lang.String topicUrl) {
      this.topicUrl = topicUrl;
      return this;
    }

    @Override
    public SubscribeTopic set(String parameterName, Object value) {
      return (SubscribeTopic) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unsubscribeTopic".
   *
   * This request holds the parameters needed by the rssApi server.  After setting any optional
   * parameters, call the {@link UnsubscribeTopic#execute()} method to invoke the remote operation.
   *
   * @param callbackUrl
   * @param topicUrl
   * @return the request
   */
  public UnsubscribeTopic unsubscribeTopic(java.lang.String callbackUrl, java.lang.String topicUrl) throws java.io.IOException {
    UnsubscribeTopic result = new UnsubscribeTopic(callbackUrl, topicUrl);
    initialize(result);
    return result;
  }

  public class UnsubscribeTopic extends RssApiRequest<com.example.backend.rssApi.model.ApiResponse> {

    private static final String REST_PATH = "unsubscribeTopic";

    /**
     * Create a request for the method "unsubscribeTopic".
     *
     * This request holds the parameters needed by the the rssApi server.  After setting any optional
     * parameters, call the {@link UnsubscribeTopic#execute()} method to invoke the remote operation.
     * <p> {@link UnsubscribeTopic#initialize(com.google.api.client.googleapis.services.AbstractGoogle
     * ClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param callbackUrl
     * @param topicUrl
     * @since 1.13
     */
    protected UnsubscribeTopic(java.lang.String callbackUrl, java.lang.String topicUrl) {
      super(RssApi.this, "GET", REST_PATH, null, com.example.backend.rssApi.model.ApiResponse.class);
      this.callbackUrl = com.google.api.client.util.Preconditions.checkNotNull(callbackUrl, "Required parameter callbackUrl must be specified.");
      this.topicUrl = com.google.api.client.util.Preconditions.checkNotNull(topicUrl, "Required parameter topicUrl must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public UnsubscribeTopic setAlt(java.lang.String alt) {
      return (UnsubscribeTopic) super.setAlt(alt);
    }

    @Override
    public UnsubscribeTopic setFields(java.lang.String fields) {
      return (UnsubscribeTopic) super.setFields(fields);
    }

    @Override
    public UnsubscribeTopic setKey(java.lang.String key) {
      return (UnsubscribeTopic) super.setKey(key);
    }

    @Override
    public UnsubscribeTopic setOauthToken(java.lang.String oauthToken) {
      return (UnsubscribeTopic) super.setOauthToken(oauthToken);
    }

    @Override
    public UnsubscribeTopic setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UnsubscribeTopic) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UnsubscribeTopic setQuotaUser(java.lang.String quotaUser) {
      return (UnsubscribeTopic) super.setQuotaUser(quotaUser);
    }

    @Override
    public UnsubscribeTopic setUserIp(java.lang.String userIp) {
      return (UnsubscribeTopic) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String callbackUrl;

    /**

     */
    public java.lang.String getCallbackUrl() {
      return callbackUrl;
    }

    public UnsubscribeTopic setCallbackUrl(java.lang.String callbackUrl) {
      this.callbackUrl = callbackUrl;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String topicUrl;

    /**

     */
    public java.lang.String getTopicUrl() {
      return topicUrl;
    }

    public UnsubscribeTopic setTopicUrl(java.lang.String topicUrl) {
      this.topicUrl = topicUrl;
      return this;
    }

    @Override
    public UnsubscribeTopic set(String parameterName, Object value) {
      return (UnsubscribeTopic) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link RssApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link RssApi}. */
    @Override
    public RssApi build() {
      return new RssApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RssApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRssApiRequestInitializer(
        RssApiRequestInitializer rssapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(rssapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
